function decoder(base64byteCode) {
	var base64table = {
		_A: '000000', _B: '000001', _C: '000010', _D: '000011', _E: '000100', _F: '000101', _G: '000110', _H: '000111', _I: '001000', _J: '001001', _K: '001010', _L: '001011', _M: '001100', _N: '001101', _O: '001110', _P: '001111', _Q: '010000', _R: '010001', _S: '010010', _T: '010011', _U: '010100', _V: '010101', _W: '010110', _X: '010111', _Y: '011000', _Z: '011001', _a: '011010', _b: '011011', _c: '011100', _d: '011101', _e: '011110', _f: '011111', _g: '100000', _h: '100001', _i: '100010', _j: '100011', _k: '100100', _l: '100101', _m: '100110', _n: '100111', _o: '101000', _p: '101001', _q: '101010', _r: '101011', _s: '101100', _t: '101101', _u: '101110', _v: '101111', _w: '110000', _x: '110001', _y: '110010', _z: '110011', _0: '110100', _1: '110101', _2: '110110', _3: '110111', _4: '111000', _5: '111001', _6: '111010', _7: '111011', _8: '111100', _9: '111101', _A1: '111110', _B1: '111111'
	};

	var binToByteTable = { _00000000: 0, _00000001: 1, _00000010: 2, _00000011: 3, _00000100: 4, _00000101: 5, _00000110: 6, _00000111: 7, _00001000: 8, _00001001: 9, _00001010: 10, _00001011: 11, _00001100: 12, _00001101: 13, _00001110: 14, _00001111: 15, _00010000: 16, _00010001: 17, _00010010: 18, _00010011: 19, _00010100: 20, _00010101: 21, _00010110: 22, _00010111: 23, _00011000: 24, _00011001: 25, _00011010: 26, _00011011: 27, _00011100: 28, _00011101: 29, _00011110: 30, _00011111: 31, _00100000: 32, _00100001: 33, _00100010: 34, _00100011: 35, _00100100: 36, _00100101: 37, _00100110: 38, _00100111: 39, _00101000: 40, _00101001: 41, _00101010: 42, _00101011: 43, _00101100: 44, _00101101: 45, _00101110: 46, _00101111: 47, _00110000: 48, _00110001: 49, _00110010: 50, _00110011: 51, _00110100: 52, _00110101: 53, _00110110: 54, _00110111: 55, _00111000: 56, _00111001: 57, _00111010: 58, _00111011: 59, _00111100: 60, _00111101: 61, _00111110: 62, _00111111: 63, _01000000: 64, _01000001: 65, _01000010: 66, _01000011: 67, _01000100: 68, _01000101: 69, _01000110: 70, _01000111: 71, _01001000: 72, _01001001: 73, _01001010: 74, _01001011: 75, _01001100: 76, _01001101: 77, _01001110: 78, _01001111: 79, _01010000: 80, _01010001: 81, _01010010: 82, _01010011: 83, _01010100: 84, _01010101: 85, _01010110: 86, _01010111: 87, _01011000: 88, _01011001: 89, _01011010: 90, _01011011: 91, _01011100: 92, _01011101: 93, _01011110: 94, _01011111: 95, _01100000: 96, _01100001: 97, _01100010: 98, _01100011: 99, _01100100: 100, _01100101: 101, _01100110: 102, _01100111: 103, _01101000: 104, _01101001: 105, _01101010: 106, _01101011: 107, _01101100: 108, _01101101: 109, _01101110: 110, _01101111: 111, _01110000: 112, _01110001: 113, _01110010: 114, _01110011: 115, _01110100: 116, _01110101: 117, _01110110: 118, _01110111: 119, _01111000: 120, _01111001: 121, _01111010: 122, _01111011: 123, _01111100: 124, _01111101: 125, _01111110: 126, _01111111: 127, _10000000: -128, _10000001: -127, _10000010: -126, _10000011: -125, _10000100: -124, _10000101: -123, _10000110: -122, _10000111: -121, _10001000: -120, _10001001: -119, _10001010: -118, _10001011: -117, _10001100: -116, _10001101: -115, _10001110: -114, _10001111: -113, _10010000: -112, _10010001: -111, _10010010: -110, _10010011: -109, _10010100: -108, _10010101: -107, _10010110: -106, _10010111: -105, _10011000: -104, _10011001: -103, _10011010: -102, _10011011: -101, _10011100: -100, _10011101: -99, _10011110: -98, _10011111: -97, _10100000: -96, _10100001: -95, _10100010: -94, _10100011: -93, _10100100: -92, _10100101: -91, _10100110: -90, _10100111: -89, _10101000: -88, _10101001: -87, _10101010: -86, _10101011: -85, _10101100: -84, _10101101: -83, _10101110: -82, _10101111: -81, _10110000: -80, _10110001: -79, _10110010: -78, _10110011: -77, _10110100: -76, _10110101: -75, _10110110: -74, _10110111: -73, _10111000: -72, _10111001: -71, _10111010: -70, _10111011: -69, _10111100: -68, _10111101: -67, _10111110: -66, _10111111: -65, _11000000: -64, _11000001: -63, _11000010: -62, _11000011: -61, _11000100: -60, _11000101: -59, _11000110: -58, _11000111: -57, _11001000: -56, _11001001: -55, _11001010: -54, _11001011: -53, _11001100: -52, _11001101: -51, _11001110: -50, _11001111: -49, _11010000: -48, _11010001: -47, _11010010: -46, _11010011: -45, _11010100: -44, _11010101: -43, _11010110: -42, _11010111: -41, _11011000: -40, _11011001: -39, _11011010: -38, _11011011: -37, _11011100: -36, _11011101: -35, _11011110: -34, _11011111: -33, _11100000: -32, _11100001: -31, _11100010: -30, _11100011: -29, _11100100: -28, _11100101: -27, _11100110: -26, _11100111: -25, _11101000: -24, _11101001: -23, _11101010: -22, _11101011: -21, _11101100: -20, _11101101: -19, _11101110: -18, _11101111: -17, _11110000: -16, _11110001: -15, _11110010: -14, _11110011: -13, _11110100: -12, _11110101: -11, _11110110: -10, _11110111: -9, _11111000: -8, _11111001: -7, _11111010: -6, _11111011: -5, _11111100: -4, _11111101: -3, _11111110: -2, _11111111: -1 };
	
	var binary = '';
	for (var i = 0; i < base64byteCode.length; i++) {
		var character = base64byteCode[i];
		if (base64table['_' + character]) {
			binary += base64table['_' + character];
		} else {
			if (character == '+') {
				binary += base64table['_A1'];
			} else {
				binary += base64table['_B1'];
			}
		}
	}
	var delimitedString = "";
	for (var i = 0; i + 7 < binary.length;) {
		delimitedString += binToByteTable['_' +
			binary[i++] +
			binary[i++] +
			binary[i++] +
			binary[i++] +
			binary[i++] +
			binary[i++] +
			binary[i++] +
			binary[i++]] + '^';
	}
	return delimitedString.split('^');
}
